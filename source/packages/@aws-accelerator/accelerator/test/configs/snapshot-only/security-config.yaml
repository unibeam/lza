homeRegion: &HOME_REGION us-east-1
snsSubscriptionConfig:
  - level: High
    email: foo@example.com
keyManagementService:
  keySets:
    - name: key1
      alias: accelerator/test-key/key1
      policy: kms/kms-policy-01.json
      description: Test KMS Key
      enableKeyRotation: true
      enabled: true
      removalPolicy: destroy
      deploymentTargets:
        organizationalUnits:
          - Root
          - Infrastructure
    - name: appEbsKey
      alias: accelerator/test-key/app-ebs-key
      policy: kms/kms-policy-01.json
      description: Test KMS Key 2
      enableKeyRotation: true
      enabled: true
      removalPolicy: destroy
      deploymentTargets:
        organizationalUnits:
          - Root
          - Infrastructure
centralSecurityServices:
  delegatedAdminAccount: Audit
  ebsDefaultVolumeEncryption:
    enable: true
    #kmsKey: key1
    deploymentTargets:
      organizationalUnits:
        - Root
      excludedRegions:
        - us-west-2
  s3PublicAccessBlock:
    enable: true
    excludeAccounts:
      - Management
  scpRevertChangesConfig:
    enable: true
    snsTopicName: Security
  macie:
    enable: true
    excludeRegions:
      - us-west-2
    policyFindingsPublishingFrequency: FIFTEEN_MINUTES
    publishSensitiveDataFindings: true
  guardduty:
    enable: true
    deploymentTargets:
      accounts:
        - Management
        - Network
      excludedRegions:
        - us-west-2
    autoEnableOrgMembers: false
    s3Protection:
      enable: true
      excludeRegions:
        - us-west-2
    eksProtection:
      enable: true
    exportConfiguration:
      enable: true
      overrideExisting: true
      destinationType: S3
      exportFrequency: FIFTEEN_MINUTES
  auditManager:
    enable: true
    excludeRegions:
      - us-west-2
    defaultReportsConfiguration:
      enable: true
      destinationType: S3
  detective:
    enable: true
    excludeRegions:
      - us-west-2
  securityHub:
    enable: true
    regionAggregation: true
    snsTopicName: Security
    notificationLevel: HIGH
    logging:
      cloudWatch:
        enable: true
        logLevel: MEDIUM
    excludeRegions:
      - us-west-2
    standards:
      - name: AWS Foundational Security Best Practices v1.0.0
        enable: true
        controlsToDisable:
          - IAM.1
          - EC2.10
          - Lambda.4
      - name: PCI DSS v3.2.1
        enable: true
        controlsToDisable:
          - PCI.IAM.3
          - PCI.S3.3
          - PCI.EC2.3
          - PCI.Lambda.2
      - name: CIS AWS Foundations Benchmark v1.2.0
        enable: true
        controlsToDisable:
          - CIS.1.20
          - CIS.1.22
          - CIS.2.6
      - name: CIS AWS Foundations Benchmark v1.4.0
        enable: true
        controlsToDisable:
          - '1.17'
          - '1.16'
      - name: CIS AWS Foundations Benchmark v3.0.0
        enable: true
  ssmAutomation:
    documentSets:
      - shareTargets:
          organizationalUnits:
            - Root
        documents:
          # Calls the AWS CLI to enable access logs on a specified ELB
          - name: SSM-ELB-Enable-Logging
            template: ssm-documents/ssm-elb-enable-logging.yaml
          # Enables S3 encryption using KMS
          - name: Put-S3-Encryption
            template: ssm-documents/s3-encryption.yaml
          # Attaches instance profiles to an EC2 instance
          - name: Attach-IAM-Instance-Profile
            template: ssm-documents/attach-iam-instance-profile.yaml
            targetType: /AWS::EC2::Instance
          # Attaches Aws IAM Managed Policy to IAM Role
          - name: Attach-IAM-Role-Policy
            template: ssm-documents/attach-iam-role-policy.yaml
          # Turns on CloudWatch logging for WAF ACLs
          - name: WAF-Enable-Logging
            template: ssm-documents/waf-enable-logging.yaml
  snsSubscriptions:
    - level: High
      email: notify-high@example.com
    - level: Medium
      email: notify-medium@example.com
    - level: Low
      email: notify-low@example.com

accessAnalyzer:
  enable: true
iamPasswordPolicy:
  allowUsersToChangePassword: true
  hardExpiry: false
  requireUppercaseCharacters: true
  requireLowercaseCharacters: true
  requireSymbols: true
  requireNumbers: true
  minimumPasswordLength: 14
  passwordReusePrevention: 24
  maxPasswordAge: 90
awsConfig:
  enableConfigurationRecorder: true
  enableDeliveryChannel: true
  ruleSets:
    - deploymentTargets:
        organizationalUnits:
          - Root
      rules:
        - name: accelerator-waf-logging-enabled
          type: Custom
          description: Custom rule for checking WAF logging enabled
          inputParameters:
          customRule:
            lambda:
              sourceFilePath: custom-config-rules/waf-logging-enabled.zip
              handler: index.handler
              runtime: python3.12
              rolePolicyFile: custom-config-rules/waf-logging-enabled-detection-role.json
            periodic: true
            maximumExecutionFrequency: Six_Hours
            configurationChanges: true
            triggeringResources:
              lookupType: ResourceTypes
              lookupKey: ResourceTypes
              lookupValue:
                - AWS::WAF::WebACL
                - AWS::WAFRegional::WebACL
                - AWS::WAFv2::WebACL
          remediation:
            rolePolicyFile: custom-config-rules/waf-logging-enabled-remediation-role.json
            automatic: true
            targetId: WAF-Enable-Logging
            retryAttemptSeconds: 60
            maximumAutomaticAttempts: 5
            parameters:
              - name: WebACLId
                value: RESOURCE_ID
                type: String
        - name: accelerator-target-document-01
          type: Custom
          description: Custom rule for testing target document remediation
          inputParameters:
          customRule:
            lambda:
              sourceFilePath: custom-config-rules/attach-ec2-instance-profile.zip
              handler: index.handler
              runtime: nodejs18.x
              rolePolicyFile: custom-config-rules/attach-ec2-instance-profile-detection-role.json
            periodic: true
            maximumExecutionFrequency: Six_Hours
            configurationChanges: true
            triggeringResources:
              lookupType: ResourceTypes
              lookupKey: ResourceTypes
              lookupValue:
                - AWS::EC2::Instance
          remediation:
            rolePolicyFile: custom-config-rules/attach-ec2-instance-profile-remediation-role.json
            automatic: true
            targetId: Attach-IAM-Instance-Profile
            targetDocumentLambda:
              sourceFilePath: custom-config-rules/targetDocumentLambda.zip
              handler: index.handler
              runtime: nodejs18.x
              rolePolicyFile: custom-config-rules/attach-ec2-instance-profile-remediation-role.json
            retryAttemptSeconds: 60
            maximumAutomaticAttempts: 5
            parameters:
              - name: InstanceId
                value: RESOURCE_ID
                type: String
              - name: IamInstanceProfile
                value: ${ACCEL_LOOKUP::InstanceProfile:EC2-Default-SSM-AD-Role}
                type: StringList
          tags:
            - key: key
              value: value
        - name: accelerator-attach-ec2-instance-profile
          type: Custom
          description: Custom rule for checking EC2 instance IAM profile attachment
          inputParameters:
          customRule:
            lambda:
              sourceFilePath: custom-config-rules/attach-ec2-instance-profile.zip
              handler: index.handler
              runtime: nodejs18.x
              rolePolicyFile: custom-config-rules/attach-ec2-instance-profile-detection-role.json
            periodic: true
            maximumExecutionFrequency: Six_Hours
            configurationChanges: true
            triggeringResources:
              lookupType: ResourceTypes
              lookupKey: ResourceTypes
              lookupValue:
                - AWS::EC2::Instance
          remediation:
            rolePolicyFile: custom-config-rules/attach-ec2-instance-profile-remediation-role.json
            automatic: true
            targetId: Attach-IAM-Instance-Profile
            retryAttemptSeconds: 60
            maximumAutomaticAttempts: 5
            parameters:
              - name: InstanceId
                value: RESOURCE_ID
                type: String
              - name: IamInstanceProfile
                value: ${ACCEL_LOOKUP::InstanceProfile:EC2-Default-SSM-AD-Role}
                type: StringList
        - name: accelerator-ec2-instance-profile-permission
          type: Custom
          description: Custom role to remediate EC2 instance profile permission
          inputParameters:
            AWSManagedPolicies: AmazonSSMManagedInstanceCore,AmazonSSMDirectoryServiceAccess,CloudWatchAgentServerPolicy
            #            CustomerManagedPolicies: ${ACCEL_LOOKUP::CustomerManagedPolicy:<POLICY_NAME>},${ACCEL_LOOKUP::CustomerManagedPolicy:<POLICY_NAME>}
            ResourceId: RESOURCE_ID
          customRule:
            lambda:
              sourceFilePath: custom-config-rules/ec2-instance-profile-permissions.zip
              handler: index.handler
              runtime: nodejs18.x
              rolePolicyFile: custom-config-rules/ec2-instance-profile-permissions-detection-role.json
            periodic: true
            maximumExecutionFrequency: Six_Hours
            configurationChanges: true
            triggeringResources:
              lookupType: ResourceTypes
              lookupKey: ResourceTypes
              lookupValue:
                - AWS::IAM::Role
          remediation:
            rolePolicyFile: custom-config-rules/ec2-instance-profile-permissions-remediation-role.json
            automatic: true
            targetId: Attach-IAM-Role-Policy
            targetAccountName: Audit
            retryAttemptSeconds: 60
            maximumAutomaticAttempts: 5
            parameters:
              - name: ResourceId
                value: RESOURCE_ID
                type: String
              - name: AWSManagedPolicies
                value: AmazonSSMManagedInstanceCore,AmazonSSMDirectoryServiceAccess,CloudWatchAgentServerPolicy
                type: StringList
              # - name: CustomerManagedPolicies
              #   value: ${ACCEL_LOOKUP::CustomerManagedPolicy:policy-00},${ACCEL_LOOKUP::CustomerManagedPolicy:policy-01}
              #   type: StringList
        - name: accelerator-s3-bucket-server-side-encryption-enabled
          identifier: S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED
          complianceResourceTypes:
            - AWS::S3::Bucket
          remediation:
            rolePolicyFile: custom-config-rules/bucket-sse-enabled-remediation-role.json
            automatic: true
            targetId: Put-S3-Encryption
            retryAttemptSeconds: 60
            maximumAutomaticAttempts: 5
            parameters:
              - name: BucketName
                value: RESOURCE_ID
                type: String
              - name: KMSMasterKey
                value: ${ACCEL_LOOKUP::KMS}
                type: StringList
        - name: accelerator-elb-logging-enabled
          identifier: ELB_LOGGING_ENABLED
          complianceResourceTypes:
            - AWS::ElasticLoadBalancing::LoadBalancer
            - AWS::ElasticLoadBalancingV2::LoadBalancer
          inputParameters:
            s3BucketNames: ${ACCEL_LOOKUP::Bucket:elbLogs}
          remediation:
            rolePolicyFile: custom-config-rules/elb-logging-enabled-remediation-role.json
            automatic: true
            targetId: SSM-ELB-Enable-Logging
            retryAttemptSeconds: 60
            maximumAutomaticAttempts: 5
            parameters:
              - name: LoadBalancerArn
                value: RESOURCE_ID
                type: String
              - name: LogDestination
                value: ${ACCEL_LOOKUP::Bucket:elbLogs}
                type: StringList
        - name: accelerator-iam-user-group-membership-check
          complianceResourceTypes:
            - AWS::IAM::User
          identifier: IAM_USER_GROUP_MEMBERSHIP_CHECK
        - name: accelerator-securityhub-enabled
          identifier: SECURITYHUB_ENABLED
        - name: accelerator-cloudtrail-enabled
          identifier: CLOUD_TRAIL_ENABLED
        - name: accelerator-rds-logging-enabled
          complianceResourceTypes:
            - AWS::RDS::DBInstance
          identifier: RDS_LOGGING_ENABLED
        - name: accelerator-cloudwatch-alarm-action-check
          complianceResourceTypes:
            - AWS::CloudWatch::Alarm
          inputParameters:
            alarmActionRequired: 'TRUE'
            insufficientDataActionRequired: 'TRUE'
            okActionRequired: 'FALSE'
          identifier: CLOUDWATCH_ALARM_ACTION_CHECK
        - name: accelerator-redshift-cluster-configuration-check
          inputParameters:
            clusterDbEncrypted: 'TRUE'
            loggingEnabled: 'TRUE'
          complianceResourceTypes:
            - AWS::Redshift::Cluster
          identifier: REDSHIFT_CLUSTER_CONFIGURATION_CHECK
        - name: accelerator-cloudtrail-s3-dataevents-enabled
          identifier: CLOUDTRAIL_S3_DATAEVENTS_ENABLED
        - name: accelerator-emr-kerberos-enabled
          identifier: EMR_KERBEROS_ENABLED
        - name: accelerator-iam-group-has-users-check
          complianceResourceTypes:
            - AWS::IAM::Group
          identifier: IAM_GROUP_HAS_USERS_CHECK
        - name: accelerator-s3-bucket-policy-grantee-check
          complianceResourceTypes:
            - AWS::S3::Bucket
          identifier: S3_BUCKET_POLICY_GRANTEE_CHECK
        - name: accelerator-lambda-inside-vpc
          complianceResourceTypes:
            - AWS::Lambda::Function
          identifier: LAMBDA_INSIDE_VPC
        - name: accelerator-ec2-instances-in-vpc
          complianceResourceTypes:
            - AWS::EC2::Instance
          identifier: INSTANCES_IN_VPC
        - name: accelerator-vpc-sg-open-only-to-authorized-ports
          inputParameters:
            authorizedTcpPorts: '443'
            authorizedUdpPorts: '1020-1025'
          complianceResourceTypes:
            - AWS::EC2::SecurityGroup
          identifier: VPC_SG_OPEN_ONLY_TO_AUTHORIZED_PORTS
        - name: accelerator-ec2-instance-no-public-ip
          complianceResourceTypes:
            - AWS::EC2::Instance
          identifier: EC2_INSTANCE_NO_PUBLIC_IP
        - name: accelerator-elasticsearch-in-vpc-only
          identifier: ELASTICSEARCH_IN_VPC_ONLY
        - name: accelerator-internet-gateway-authorized-vpc-only
          complianceResourceTypes:
            - AWS::EC2::InternetGateway
          identifier: INTERNET_GATEWAY_AUTHORIZED_VPC_ONLY
        - name: accelerator-iam-no-inline-policy-check
          complianceResourceTypes:
            - AWS::IAM::User
            - AWS::IAM::Role
            - AWS::IAM::Group
          identifier: IAM_NO_INLINE_POLICY_CHECK
        - name: accelerator-elb-acm-certificate-required
          complianceResourceTypes:
            - AWS::ElasticLoadBalancing::LoadBalancer
          identifier: ELB_ACM_CERTIFICATE_REQUIRED
        - name: accelerator-alb-http-drop-invalid-header-enabled
          complianceResourceTypes:
            - AWS::ElasticLoadBalancingV2::LoadBalancer
          identifier: ALB_HTTP_DROP_INVALID_HEADER_ENABLED
        - name: accelerator-elb-tls-https-listeners-only
          complianceResourceTypes:
            - AWS::ElasticLoadBalancing::LoadBalancer
          identifier: ELB_TLS_HTTPS_LISTENERS_ONLY
        - name: accelerator-api-gw-execution-logging-enabled
          complianceResourceTypes:
            - AWS::ApiGateway::Stage
            - AWS::ApiGatewayV2::Stage
          identifier: API_GW_EXECUTION_LOGGING_ENABLED
        - name: accelerator-cloudwatch-log-group-encrypted
          identifier: CLOUDWATCH_LOG_GROUP_ENCRYPTED
        - name: accelerator-s3-bucket-replication-enabled
          complianceResourceTypes:
            - AWS::S3::Bucket
          identifier: S3_BUCKET_REPLICATION_ENABLED
        - name: accelerator-cw-loggroup-retention-period-check
          identifier: CW_LOGGROUP_RETENTION_PERIOD_CHECK
        - name: accelerator-ec2-instance-detailed-monitoring-enabled
          complianceResourceTypes:
            - AWS::EC2::Instance
          identifier: EC2_INSTANCE_DETAILED_MONITORING_ENABLED
        - name: accelerator-ec2-volume-inuse-check
          inputParameters:
            deleteOnTermination: 'TRUE'
          complianceResourceTypes:
            - AWS::EC2::Volume
          identifier: EC2_VOLUME_INUSE_CHECK
        - name: accelerator-elb-deletion-protection-enabled
          complianceResourceTypes:
            - AWS::ElasticLoadBalancingV2::LoadBalancer
          identifier: ELB_DELETION_PROTECTION_ENABLED
        - name: accelerator-cloudtrail-security-trail-enabled
          identifier: CLOUDTRAIL_SECURITY_TRAIL_ENABLED
        - name: accelerator-elasticache-redis-cluster-automatic-backup-check
          identifier: ELASTICACHE_REDIS_CLUSTER_AUTOMATIC_BACKUP_CHECK
        - name: accelerator-s3-bucket-versioning-enabled
          complianceResourceTypes:
            - AWS::S3::Bucket
          identifier: S3_BUCKET_VERSIONING_ENABLED
        - name: accelerator-vpc-vpn-2-tunnels-up
          complianceResourceTypes:
            - AWS::EC2::VPNConnection
          identifier: VPC_VPN_2_TUNNELS_UP
        - name: accelerator-elb-cross-zone-load-balancing-enabled
          complianceResourceTypes:
            - AWS::ElasticLoadBalancing::LoadBalancer
          identifier: ELB_CROSS_ZONE_LOAD_BALANCING_ENABLED
        - name: accelerator-iam-user-mfa-enabled
          identifier: IAM_USER_MFA_ENABLED
        - name: accelerator-guardduty-non-archived-findings
          inputParameters:
            daysHighSev: '1'
            daysLowSev: '30'
            daysMediumSev: '7'
          identifier: GUARDDUTY_NON_ARCHIVED_FINDINGS
        - name: accelerator-elasticsearch-node-to-node-encryption-check
          complianceResourceTypes:
            - AWS::Elasticsearch::Domain
          identifier: ELASTICSEARCH_NODE_TO_NODE_ENCRYPTION_CHECK
        - name: accelerator-kms-cmk-not-scheduled-for-deletion
          complianceResourceTypes:
            - AWS::KMS::Key
          identifier: KMS_CMK_NOT_SCHEDULED_FOR_DELETION
        - name: accelerator-api-gw-cache-enabled-and-encrypted
          complianceResourceTypes:
            - AWS::ApiGateway::Stage
          identifier: API_GW_CACHE_ENABLED_AND_ENCRYPTED
        - name: accelerator-sagemaker-endpoint-configuration-kms-key-configured
          identifier: SAGEMAKER_ENDPOINT_CONFIGURATION_KMS_KEY_CONFIGURED
        - name: accelerator-sagemaker-notebook-instance-kms-key-configured
          identifier: SAGEMAKER_NOTEBOOK_INSTANCE_KMS_KEY_CONFIGURED
        - name: accelerator-dynamodb-table-encrypted-kms
          complianceResourceTypes:
            - AWS::DynamoDB::Table
          identifier: DYNAMODB_TABLE_ENCRYPTED_KMS
        - name: accelerator-s3-bucket-default-lock-enabled
          complianceResourceTypes:
            - AWS::S3::Bucket
          identifier: S3_BUCKET_DEFAULT_LOCK_ENABLED
        - name: accelerator-duplicate-s3-rule
          identifier: S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED
          remediation:
            automatic: true
            targetId: AWS-EnableS3BucketEncryption
            rolePolicyFile: custom-config-rules/enable-s3-encryption.json
            retryAttemptSeconds: 60
            maximumAutomaticAttempts: 5
            parameters:
              - name: BucketName
                value: RESOURCE_ID
                type: String
              - name: SSEAlgorithm
                value: AES256
                type: String
cloudWatch:
  logGroups:
    - logGroupName: /App/Test1
      logRetentionInDays: 30
      terminationProtected: true
      encryption:
        useLzaManagedKey: true
      deploymentTargets:
        accounts:
          - SharedServices
    - logGroupName: /App/Test2
      logRetentionInDays: 180
      terminationProtected: false
      encryption:
        kmsKeyArn: 'arn:aws:kms:us-east-1:111111111111:key/121ac3b6-8d53-4d8a-a05c-1234567789'
      deploymentTargets:
        accounts:
          - Management
        excludedRegions:
          - us-west-2
    - logGroupName: /App/Test3
      logRetentionInDays: 365
      terminationProtected: false
      deploymentTargets:
        organizationalUnits:
          - Infrastructure
        excludedRegions:
          - us-east-1
    - logGroupName: /App/Test4
      logRetentionInDays: 14
      terminationProtected: true
      # encryption:
      #   kmsKeyName: key1
      deploymentTargets:
        organizationalUnits:
          - Infrastructure
  metricSets:
    - regions:
        - *HOME_REGION
      deploymentTargets:
        organizationalUnits:
          - Root
      metrics:
        # CIS 1.1 – Avoid the use of the "root" account
        - filterName: RootAccountMetricFilter
          logGroupName: aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail
          filterPattern: '{$.userIdentity.type="Root" && $.userIdentity.invokedBy NOT EXISTS && $.eventType !="AwsServiceEvent"}'
          metricNamespace: LogMetrics
          metricName: RootAccount
          metricValue: '1'
        # CIS 3.1 – Ensure a log metric filter and alarm exist for unauthorized API calls
        - filterName: UnauthorizedAPICallsMetricFilter
          logGroupName: aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail
          filterPattern: '{($.errorCode="*UnauthorizedOperation") || ($.errorCode="AccessDenied*")}'
          metricNamespace: LogMetrics
          metricName: UnauthorizedAPICalls
          metricValue: '1'
        # CIS 3.2 – Ensure a log metric filter and alarm exist for AWS Management Console sign-in without MFA
        - filterName: ConsoleSigninWithoutMFAMetricFilter
          logGroupName: aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail
          filterPattern: '{($.eventName = "ConsoleLogin") && ($.additionalEventData.MFAUsed != "Yes") && ($.userIdentity.type = "IAMUser") && ($.responseElements.ConsoleLogin = "Success")}'
          metricNamespace: LogMetrics
          metricName: ConsoleSigninWithoutMFA
          metricValue: '1'
        # CIS 3.3 – Ensure a log metric filter and alarm exist for usage of "root" account
        - filterName: MetricFilter
          logGroupName: aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail
          filterPattern: '{$.userIdentity.type="Root" && $.userIdentity.invokedBy NOT EXISTS && $.eventType !="AwsServiceEvent"}'
          metricNamespace: LogMetrics
          metricName: RootAccountUsage
          metricValue: '1'
        # CIS 3.4 – Ensure a log metric filter and alarm exist for IAM policy changes
        - filterName: IAMPolicyChangesMetricFilter
          logGroupName: aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail
          filterPattern: '{($.eventName=DeleteGroupPolicy) || ($.eventName=DeleteRolePolicy) || ($.eventName=DeleteUserPolicy) || ($.eventName=PutGroupPolicy) || ($.eventName=PutRolePolicy) || ($.eventName=PutUserPolicy) || ($.eventName=CreatePolicy) || ($.eventName=DeletePolicy) || ($.eventName=CreatePolicyVersion) || ($.eventName=DeletePolicyVersion) || ($.eventName=AttachRolePolicy) || ($.eventName=DetachRolePolicy) || ($.eventName=AttachUserPolicy) || ($.eventName=DetachUserPolicy) || ($.eventName=AttachGroupPolicy) || ($.eventName=DetachGroupPolicy)}'
          metricNamespace: LogMetrics
          metricName: IAMPolicyChanges
          metricValue: '1'
        # CIS 3.5 – Ensure a log metric filter and alarm exist for CloudTrail configuration changes
        - filterName: CloudTrailChangesMetricFilter
          logGroupName: aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail
          filterPattern: '{($.eventName=CreateTrail) || ($.eventName=UpdateTrail) || ($.eventName=DeleteTrail) || ($.eventName=StartLogging) || ($.eventName=StopLogging)}'
          metricNamespace: LogMetrics
          metricName: CloudTrailChanges
          metricValue: '1'
        # CIS 3.6 – Ensure a log metric filter and alarm exist for AWS Management Console authentication failures
        - filterName: ConsoleAuthenticationFailureMetricFilter
          logGroupName: aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail
          filterPattern: '{($.eventName=ConsoleLogin) && ($.errorMessage="Failed authentication")}'
          metricNamespace: LogMetrics
          metricName: ConsoleAuthenticationFailure
          metricValue: '1'
        # CIS 3.7 – Ensure a log metric filter and alarm exist for disabling or scheduled deletion of customer created CMKs
        - filterName: DisableOrDeleteCMKMetricFilter
          logGroupName: aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail
          filterPattern: '{($.eventSource=kms.amazonaws.com) && (($.eventName=DisableKey) || ($.eventName=ScheduleKeyDeletion))}'
          metricNamespace: LogMetrics
          metricName: DisableOrDeleteCMK
          metricValue: '1'
        # CIS 3.8 – Ensure a log metric filter and alarm exist for S3 bucket policy changes
        - filterName: S3BucketPolicyChangesMetricFilter
          logGroupName: aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail
          filterPattern: '{($.eventSource=s3.amazonaws.com) && (($.eventName=PutBucketAcl) || ($.eventName=PutBucketPolicy) || ($.eventName=PutBucketCors) || ($.eventName=PutBucketLifecycle) || ($.eventName=PutBucketReplication) || ($.eventName=DeleteBucketPolicy) || ($.eventName=DeleteBucketCors) || ($.eventName=DeleteBucketLifecycle) || ($.eventName=DeleteBucketReplication))}'
          metricNamespace: LogMetrics
          metricName: S3BucketPolicyChanges
          metricValue: '1'
        # CIS 3.9 – Ensure a log metric filter and alarm exist for AWS Config configuration changes
        - filterName: AWSConfigChangesMetricFilter
          logGroupName: aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail
          filterPattern: '{($.eventSource=config.amazonaws.com) && (($.eventName=StopConfigurationRecorder) || ($.eventName=DeleteDeliveryChannel) || ($.eventName=PutDeliveryChannel) || ($.eventName=PutConfigurationRecorder))}'
          metricNamespace: LogMetrics
          metricName: AWSConfigChanges
          metricValue: '1'
        # CIS 3.10 – Ensure a log metric filter and alarm exist for security group changes
        - filterName: SecurityGroupChangesMetricFilter
          logGroupName: aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail
          filterPattern: '{($.eventName=AuthorizeSecurityGroupIngress) || ($.eventName=AuthorizeSecurityGroupEgress) || ($.eventName=RevokeSecurityGroupIngress) || ($.eventName=RevokeSecurityGroupEgress) || ($.eventName=CreateSecurityGroup) || ($.eventName=DeleteSecurityGroup)}'
          metricNamespace: LogMetrics
          metricName: SecurityGroupChanges
          metricValue: '1'
        # CIS 3.11 – Ensure a log metric filter and alarm exist for changes to Network Access Control Lists (NACL)
        - filterName: NetworkACLChangesMetricFilter
          logGroupName: aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail
          filterPattern: '{($.eventName=CreateNetworkAcl) || ($.eventName=CreateNetworkAclEntry) || ($.eventName=DeleteNetworkAcl) || ($.eventName=DeleteNetworkAclEntry) || ($.eventName=ReplaceNetworkAclEntry) || ($.eventName=ReplaceNetworkAclAssociation)}'
          metricNamespace: LogMetrics
          metricName: NetworkACLChanges
          metricValue: '1'
        # CIS 3.12 – Ensure a log metric filter and alarm exist for changes to network gateways
        - filterName: NetworkGatewayChangesMetricFilter
          logGroupName: aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail
          filterPattern: '{($.eventName=CreateCustomerGateway) || ($.eventName=DeleteCustomerGateway) || ($.eventName=AttachInternetGateway) || ($.eventName=CreateInternetGateway) || ($.eventName=DeleteInternetGateway) || ($.eventName=DetachInternetGateway)}'
          metricNamespace: LogMetrics
          metricName: NetworkGatewayChanges
          metricValue: '1'
        # CIS 3.13 – Ensure a log metric filter and alarm exist for route table changes
        - filterName: RouteTableChangesMetricFilter
          logGroupName: aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail
          filterPattern: '{($.eventName=CreateRoute) || ($.eventName=CreateRouteTable) || ($.eventName=ReplaceRoute) || ($.eventName=ReplaceRouteTableAssociation) || ($.eventName=DeleteRouteTable) || ($.eventName=DeleteRoute) || ($.eventName=DisassociateRouteTable)}'
          metricNamespace: LogMetrics
          metricName: RouteTableChanges
          metricValue: '1'
        # CIS 3.14 – Ensure a log metric filter and alarm exist for VPC changes
        - filterName: VPCChangesMetricFilter
          logGroupName: aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail
          filterPattern: '{($.eventName=CreateVpc) || ($.eventName=DeleteVpc) || ($.eventName=ModifyVpcAttribute) || ($.eventName=AcceptVpcPeeringConnection) || ($.eventName=CreateVpcPeeringConnection) || ($.eventName=DeleteVpcPeeringConnection) || ($.eventName=RejectVpcPeeringConnection) || ($.eventName=AttachClassicLinkVpc) || ($.eventName=DetachClassicLinkVpc) || ($.eventName=DisableVpcClassicLink) || ($.eventName=EnableVpcClassicLink)}'
          metricNamespace: LogMetrics
          metricName: VPCChanges
          metricValue: '1'
        # greater than threshold test
        - filterName: GenericMetricFilterGreaterThanThreshold
          logGroupName: /generic/log/group
          filterPattern: '{$.eventType !="AwsServiceEvent"}'
          metricNamespace: LzaMetrics
          metricName: GenericMetricForTestingGreaterThanThreshold
          metricValue: '1'
        # less than threshold test
        - filterName: GenericMetricFilterLessThanThreshold
          logGroupName: /generic/log/group
          filterPattern: '{$.eventType !="AwsServiceEvent"}'
          metricNamespace: LzaMetrics
          metricName: GenericMetricForTestingLessThanThreshold
          metricValue: '1'
        # less than or equal to threshold test
        - filterName: GenericMetricFilterLessThanOrEqualToThreshold
          logGroupName: /generic/log/group
          filterPattern: '{$.eventType !="AwsServiceEvent"}'
          metricNamespace: LzaMetrics
          metricName: GenericMetricForTestingLessThanOrEqualToThreshold
          metricValue: '1'
        # less than lower or greater than upper threshold test
        - filterName: GenericMetricFilterLessThanLowerOrGreaterThanUpperThreshold
          logGroupName: /generic/log/group
          filterPattern: '{$.eventType !="AwsServiceEvent"}'
          metricNamespace: LzaMetrics
          metricName: GenericMetricForTestingLessThanLowerOrGreaterThanUpperThreshold
          metricValue: '1'
        # greater than upper threshold test
        - filterName: GenericMetricFilterGreaterThanUpperThreshold
          logGroupName: /generic/log/group
          filterPattern: '{$.eventType !="AwsServiceEvent"}'
          metricNamespace: LzaMetrics
          metricName: GenericMetricForTestingGreaterThanUpperThreshold
          metricValue: '1'
        # less than lower threshold test
        - filterName: GenericMetricFilterLessThanLowerThreshold
          logGroupName: /generic/log/group
          filterPattern: '{$.eventType !="AwsServiceEvent"}'
          metricNamespace: LzaMetrics
          metricName: GenericMetricForTestingLessThanLowerThreshold
          metricValue: '1'
    - regions:
        - *HOME_REGION
      deploymentTargets:
        account:
          - SharedServices
      metrics:
        - filterName: GenericMetricFilterGreaterThanOrEqualToThreshold
          logGroupName: /generic/log/group
          filterPattern: '{$.eventType !="AwsServiceEvent"}'
          metricNamespace: LzaMetrics
          metricName: GenericMetricForTestingGreaterThanOrEqualToThreshold
          metricValue: '1'
        - filterName: GenericMetricFilterGreaterThanThreshold
          logGroupName: /generic/log/group
          filterPattern: '{$.eventType !="AwsServiceEvent"}'
          metricNamespace: LzaMetrics
          metricName: GenericMetricForTestingGreaterThanThreshold
          metricValue: '1'
        - filterName: GenericMetricFilterLessThanThreshold
          logGroupName: /generic/log/group
          filterPattern: '{$.eventType !="AwsServiceEvent"}'
          metricNamespace: LzaMetrics
          metricName: GenericMetricForTestingLessThanThreshold
          metricValue: '1'
  alarmSets:
    - regions:
        - *HOME_REGION
      deploymentTargets:
        organizationalUnits:
          - Root
      alarms:
        # CIS 1.1 – Avoid the use of the "root" account
        - alarmName: CIS-1.1-RootAccountUsage
          alarmDescription: Alarm for usage of "root" account
          snsTopicName: Security
          metricName: RootAccountUsage
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # CIS 3.1 – Ensure a log metric filter and alarm exist for unauthorized API calls
        - alarmName: CIS-3.1-UnauthorizedAPICalls
          alarmDescription: Alarm for unauthorized API calls
          snsTopicName: Security
          metricName: UnauthorizedAPICalls
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Average
          threshold: 5
          treatMissingData: notBreaching
        # CIS 3.2 – Ensure a log metric filter and alarm exist for AWS Management Console sign-in without MFA
        - alarmName: CIS-3.2-ConsoleSigninWithoutMFA
          alarmDescription: Alarm for AWS Management Console sign-in without MFA
          snsTopicName: Security
          metricName: ConsoleSigninWithoutMFA
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # CIS 3.3 – Ensure a log metric filter and alarm exist for usage of "root" account
        - alarmName: CIS-3.3-RootAccountUsage
          alarmDescription: Alarm for usage of "root" account
          snsTopicName: Security
          metricName: RootAccountUsage
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # CIS 3.4 – Ensure a log metric filter and alarm exist for IAM policy changes
        - alarmName: CIS-3.4-IAMPolicyChanges
          alarmDescription: Alarm for IAM policy changes
          snsTopicName: Security
          metricName: IAMPolicyChanges
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Average
          threshold: 1
          treatMissingData: notBreaching
        # CIS 3.5 – Ensure a log metric filter and alarm exist for CloudTrail configuration changes
        - alarmName: CIS-3.5-CloudTrailChanges
          alarmDescription: Alarm for CloudTrail configuration changes
          snsTopicName: Security
          metricName: CloudTrailChanges
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # CIS 3.6 – Ensure a log metric filter and alarm exist for AWS Management Console authentication failures
        - alarmName: CIS-3.6-ConsoleAuthenticationFailure
          alarmDescription: Alarm exist for AWS Management Console authentication failures
          snsTopicName: Security
          metricName: ConsoleAuthenticationFailure
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # CIS 3.7 – Ensure a log metric filter and alarm exist for disabling or scheduled deletion of customer created CMKs
        - alarmName: CIS-3.7-DisableOrDeleteCMK
          alarmDescription: Alarm for disabling or scheduled deletion of customer created CMKs
          snsTopicName: Security
          metricName: DisableOrDeleteCMK
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # CIS 3.8 – Ensure a log metric filter and alarm exist for S3 bucket policy changes
        - alarmName: CIS-3.8-S3BucketPolicyChanges.
          alarmDescription: Alarm for S3 bucket policy changes
          snsTopicName: Security
          metricName: S3BucketPolicyChanges
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Average
          threshold: 1
          treatMissingData: notBreaching
        # CIS 3.9 – Ensure a log metric filter and alarm exist for AWS Config configuration changes
        - alarmName: CIS-3.9-AWSConfigChanges
          alarmDescription: Alarm for AWS Config configuration changes
          snsTopicName: Security
          metricName: AWSConfigChanges
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # CIS 3.10 – Ensure a log metric filter and alarm exist for security group changes
        - alarmName: CIS-3.10-SecurityGroupChanges
          alarmDescription: Alarm for security group changes
          snsTopicName: Security
          metricName: SecurityGroupChanges
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # CIS 3.11 – Ensure a log metric filter and alarm exist for changes to Network Access Control Lists (NACL)
        - alarmName: CIS-3.11-NetworkACLChanges
          alarmDescription: Alarm for changes to Network Access Control Lists (NACL)
          snsTopicName: Security
          metricName: NetworkACLChanges
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # CIS 3.12 – Ensure a log metric filter and alarm exist for changes to network gateways
        - alarmName: CIS-3.12-NetworkGatewayChanges
          alarmDescription: Alarm for changes to network gateways
          snsTopicName: Security
          metricName: NetworkGatewayChanges
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # CIS 3.13 – Ensure a log metric filter and alarm exist for route table changes
        - alarmName: CIS-3.13-RouteTableChanges
          alarmDescription: Alarm for route table changes
          snsTopicName: Security
          metricName: RouteTableChanges
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Average
          threshold: 1
          treatMissingData: notBreaching
        # CIS 3.14 – Ensure a log metric filter and alarm exist for VPC changes
        - alarmName: CIS-3.14-VPCChanges
          alarmDescription: Alarm for VPC changes
          snsTopicName: Security
          metricName: VPCChanges
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # greater than threshold test
        - alarmName: GenericMetricGreaterThanThreshold
          alarmDescription: Alarm to test GenericMetric GreaterThanThreshold
          snsTopicName: Security
          metricName: GenericMetricForTestingGreaterThanThreshold
          namespace: LzaMetrics
          comparisonOperator: GreaterThanThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: ignore
        # less than threshold testing
        - alarmName: GenericMetricLessThanThreshold
          alarmDescription: Alarm to test GenericMetric LessThanThreshold
          snsTopicName: Security
          metricName: GenericMetricForTestingLessThanThreshold
          namespace: LzaMetrics
          comparisonOperator: LessThanThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: missing
        # less than or equal to threshold test
        - alarmName: GenericMetricLessThanOrEqualToThreshold
          alarmDescription: Alarm to test GenericMetric LessThanOrEqualToThreshold
          snsTopicName: Security
          metricName: GenericMetricForTestingLessThanOrEqualToThreshold
          namespace: LzaMetrics
          comparisonOperator: LessThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # less than lower or greater than upper threshold test
        - alarmName: GenericMetricLessThanLowerOrGreaterThanUpperThreshold
          alarmDescription: Alarm to test GenericMetric LessThanLowerOrGreaterThanUpperThreshold
          snsTopicName: Security
          metricName: GenericMetricForTestingLessThanLowerOrGreaterThanUpperThreshold
          namespace: LzaMetrics
          comparisonOperator: LessThanLowerOrGreaterThanUpperThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # greater than upper threshold test
        - alarmName: GenericMetricGreaterThanUpperThreshold
          alarmDescription: Alarm to test GenericMetric GreaterThanUpperThreshold
          snsTopicName: Security
          metricName: GenericMetricForTestingGreaterThanUpperThreshold
          namespace: LzaMetrics
          comparisonOperator: GreaterThanUpperThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # less than lower threshold test
        - alarmName: GenericMetricLessThanLowerThreshold
          alarmDescription: Alarm to test GenericMetric LessThanLowerThreshold
          snsTopicName: Security
          metricName: GenericMetricForTestingLessThanLowerThreshold
          namespace: LzaMetrics
          comparisonOperator: LessThanLowerThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
resourcePolicyEnforcement:
  enable: true
  remediation:
    automatic: false
    retryAttemptSeconds: 60
    maximumAutomaticAttempts: 5
  policySets:
    - resourcePolicies:
      - resourceType: IAM_ROLE
        document: resource-policies/iam.json
      - resourceType: S3_BUCKET
        document: resource-policies/s3.json
      - resourceType: KMS_KEY
        document: resource-policies/kms.json
      - resourceType: SECRETS_MANAGER_SECRET
        document: resource-policies/secrets-manager.json
      - resourceType: ECR_REPOSITORY
        document: resource-policies/ecr.json
      - resourceType: OPENSEARCH_DOMAIN
        document: resource-policies/opensearch.json
      - resourceType: SNS_TOPIC
        document: resource-policies/sns.json
      - resourceType: SQS_QUEUE
        document: resource-policies/sqs.json
      - resourceType: APIGATEWAY_REST_API
        document: resource-policies/apigateway.json
      - resourceType: LEX_BOT
        document: resource-policies/lex-bot.json
      - resourceType: EFS_FILE_SYSTEM
        document: resource-policies/efs-file-system.json
      - resourceType: EVENTBRIDGE_EVENTBUS
        document: resource-policies/eventbridge-eventbus.json
      - resourceType: BACKUP_VAULT
        document: resource-policies/backup-vault.json
      - resourceType: CODEARTIFACT_REPOSITORY
        document: resource-policies/codeartifact-repository.json
      inputParameters:
        SourceAccount: '{{ ALLOWED_EXTERNAL_ACCOUNTS }}'
      deploymentTargets:
        organizationalUnits:
          - Root
