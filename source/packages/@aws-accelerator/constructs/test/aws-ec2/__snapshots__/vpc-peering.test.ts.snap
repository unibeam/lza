// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`VpcPeering Construct(VpcPeering):  Snapshot Test 1`] = `
{
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs20.x",
      },
      "ap-east-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-2": {
        "value": "nodejs20.x",
      },
      "ap-northeast-3": {
        "value": "nodejs20.x",
      },
      "ap-south-1": {
        "value": "nodejs20.x",
      },
      "ap-south-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-1": {
        "value": "nodejs20.x",
      },
      "ap-southeast-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-3": {
        "value": "nodejs20.x",
      },
      "ap-southeast-4": {
        "value": "nodejs20.x",
      },
      "ap-southeast-5": {
        "value": "nodejs20.x",
      },
      "ap-southeast-7": {
        "value": "nodejs20.x",
      },
      "ca-central-1": {
        "value": "nodejs20.x",
      },
      "ca-west-1": {
        "value": "nodejs20.x",
      },
      "cn-north-1": {
        "value": "nodejs18.x",
      },
      "cn-northwest-1": {
        "value": "nodejs18.x",
      },
      "eu-central-1": {
        "value": "nodejs20.x",
      },
      "eu-central-2": {
        "value": "nodejs20.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x",
      },
      "eu-north-1": {
        "value": "nodejs20.x",
      },
      "eu-south-1": {
        "value": "nodejs20.x",
      },
      "eu-south-2": {
        "value": "nodejs20.x",
      },
      "eu-west-1": {
        "value": "nodejs20.x",
      },
      "eu-west-2": {
        "value": "nodejs20.x",
      },
      "eu-west-3": {
        "value": "nodejs20.x",
      },
      "il-central-1": {
        "value": "nodejs20.x",
      },
      "me-central-1": {
        "value": "nodejs20.x",
      },
      "me-south-1": {
        "value": "nodejs20.x",
      },
      "mx-central-1": {
        "value": "nodejs20.x",
      },
      "sa-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-2": {
        "value": "nodejs20.x",
      },
      "us-gov-east-1": {
        "value": "nodejs18.x",
      },
      "us-gov-west-1": {
        "value": "nodejs18.x",
      },
      "us-iso-east-1": {
        "value": "nodejs18.x",
      },
      "us-iso-west-1": {
        "value": "nodejs18.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-west-1": {
        "value": "nodejs20.x",
      },
      "us-west-2": {
        "value": "nodejs20.x",
      },
    },
  },
  "Resources": {
    "CustomPrefixListRouteCustomResourceProviderHandler5B28D077": {
      "DependsOn": [
        "CustomPrefixListRouteCustomResourceProviderRoleD08268B5",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomPrefixListRouteCustomResourceProviderRoleD08268B5",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomPrefixListRouteCustomResourceProviderLogGroup68DB81A5": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "kmsKey3BB021CC",
            "Arn",
          ],
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomPrefixListRouteCustomResourceProviderHandler5B28D077",
              },
            ],
          ],
        },
        "RetentionInDays": 10,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomPrefixListRouteCustomResourceProviderRoleD08268B5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:CreateRoute",
                    "ec2:DeleteRoute",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "AllowModifyRoutes",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestPeeringF63C5812": {
      "Properties": {
        "PeerOwnerId": "111111111111",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::111111111111:role/TestRole",
            ],
          ],
        },
        "PeerVpcId": "AccepterVpc",
        "Tags": [
          {
            "Key": "key",
            "Value": "value",
          },
          {
            "Key": "Name",
            "Value": "Test",
          },
        ],
        "VpcId": "RequesterVpc",
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TestPeeringcrossAccountPeerRoutepl9DA94FD5": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "myProviderframeworkonEventAB595BBA",
            "Arn",
          ],
        },
        "region": {
          "Ref": "AWS::Region",
        },
        "roleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::111111111111:role/role",
            ],
          ],
        },
        "routeDefinition": {
          "DestinationPrefixListId": "pl-test",
          "RouteTableId": "rt-3456",
          "VpcPeeringConnectionId": {
            "Ref": "TestPeeringF63C5812",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TestPeeringcrossAccountPeerRoutev4CAB8D1B0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "myProviderframeworkonEventAB595BBA",
            "Arn",
          ],
        },
        "region": {
          "Ref": "AWS::Region",
        },
        "roleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::111111111111:role/role",
            ],
          ],
        },
        "routeDefinition": {
          "DestinationCidrBlock": "10.0.0.6/32",
          "RouteTableId": "rt-3456",
          "VpcPeeringConnectionId": {
            "Ref": "TestPeeringF63C5812",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TestPeeringcrossAccountPeerRoutev6CB7B447F": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "myProviderframeworkonEventAB595BBA",
            "Arn",
          ],
        },
        "region": {
          "Ref": "AWS::Region",
        },
        "roleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::111111111111:role/role",
            ],
          ],
        },
        "routeDefinition": {
          "DestinationIpv6CidrBlock": "fd00::/8",
          "RouteTableId": "rt-3456",
          "VpcPeeringConnectionId": {
            "Ref": "TestPeeringF63C5812",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TestPeeringvpcPeeringRoute313B0AACD": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomPrefixListRouteCustomResourceProviderLogGroup68DB81A5",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomPrefixListRouteCustomResourceProviderHandler5B28D077",
            "Arn",
          ],
        },
        "routeDefinition": {
          "DestinationPrefixListId": "destinationRoute",
          "RouteTableId": "rt-12345",
          "VpcPeeringConnectionId": {
            "Ref": "TestPeeringF63C5812",
          },
        },
      },
      "Type": "Custom::PrefixListRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TestPeeringvpcPeeringRoutepl5A3561CF": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomPrefixListRouteCustomResourceProviderLogGroup68DB81A5",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomPrefixListRouteCustomResourceProviderHandler5B28D077",
            "Arn",
          ],
        },
        "routeDefinition": {
          "DestinationPrefixListId": "pl-test",
          "RouteTableId": "rt-12345",
          "VpcPeeringConnectionId": {
            "Ref": "TestPeeringF63C5812",
          },
        },
      },
      "Type": "Custom::PrefixListRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TestPeeringvpcPeeringRoutev49F442833": {
      "Properties": {
        "DestinationCidrBlock": "10.0.0.5/32",
        "RouteTableId": "rt-12345",
        "VpcPeeringConnectionId": {
          "Ref": "TestPeeringF63C5812",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TestPeeringvpcPeeringRoutev64A0FC377": {
      "Properties": {
        "DestinationIpv6CidrBlock": "fd00::/8",
        "RouteTableId": "rt-12345",
        "VpcPeeringConnectionId": {
          "Ref": "TestPeeringF63C5812",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "kmsKey1A3FA0EFA": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "kmsKey2EF55D91A": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "kmsKey3992EC0B2": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "kmsKey3BB021CC": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "myProviderframeworkonEventAB595BBA": {
      "DependsOn": [
        "myProviderframeworkonEventServiceRoleDefaultPolicy4EAC636C",
        "myProviderframeworkonEventServiceRole94BD41C2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (Default/myProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "testAF53AC38",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "myProviderframeworkonEventServiceRole94BD41C2",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "myProviderframeworkonEventServiceRole94BD41C2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "myProviderframeworkonEventServiceRoleDefaultPolicy4EAC636C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "testAF53AC38",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "testAF53AC38",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "myProviderframeworkonEventServiceRoleDefaultPolicy4EAC636C",
        "Roles": [
          {
            "Ref": "myProviderframeworkonEventServiceRole94BD41C2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testAF53AC38": {
      "DependsOn": [
        "testServiceRole78466FFF",
      ],
      "Properties": {
        "Code": {
          "ZipFile": "foo",
        },
        "Handler": "handler",
        "Role": {
          "Fn::GetAtt": [
            "testServiceRole78466FFF",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "testServiceRole78466FFF": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
