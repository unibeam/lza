// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Vpc Construct(Vpc):  Snapshot Test 1`] = `
{
  "Resources": {
    "CustomDeleteDefaultSecurityGroupRulesCustomResourceProviderHandler0579558F": {
      "DependsOn": [
        "CustomDeleteDefaultSecurityGroupRulesCustomResourceProviderRole7BAE247B",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomDeleteDefaultSecurityGroupRulesCustomResourceProviderRole7BAE247B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomDeleteDefaultSecurityGroupRulesCustomResourceProviderLogGroup36ABE46B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "testKmsTestDeleteDefaultSgRules7B9FDE55",
            "Arn",
          ],
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomDeleteDefaultSecurityGroupRulesCustomResourceProviderHandler0579558F",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomDeleteDefaultSecurityGroupRulesCustomResourceProviderRole7BAE247B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:DescribeSecurityGroups",
                    "ec2:RevokeSecurityGroupIngress",
                    "ec2:RevokeSecurityGroupEgress",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomIpamSubnetCustomResourceProviderHandlerF7AF0D7A": {
      "DependsOn": [
        "CustomIpamSubnetCustomResourceProviderRoleA2FF4E6D",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomIpamSubnetCustomResourceProviderRoleA2FF4E6D",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomIpamSubnetCustomResourceProviderLogGroup3BB67050": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "testKms8D3EA89B",
            "Arn",
          ],
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomIpamSubnetCustomResourceProviderHandlerF7AF0D7A",
              },
            ],
          ],
        },
        "RetentionInDays": 10,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomIpamSubnetCustomResourceProviderRoleA2FF4E6D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:CreateTags",
                    "ec2:DeleteSubnet",
                    "ec2:DeleteTags",
                    "ec2:ModifySubnetAttribute",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":ec2:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":subnet/*",
                      ],
                    ],
                  },
                },
                {
                  "Action": [
                    "ec2:CreateSubnet",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":subnet/*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":vpc/*",
                        ],
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "ec2:DescribeVpcs",
                    "ec2:DescribeSubnets",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DualStackSubnetC42B1019": {
      "Properties": {
        "AvailabilityZoneId": "1",
        "CidrBlock": "10.0.0.0/24",
        "EnableDns64": true,
        "Ipv6CidrBlock": "fd00::/58",
        "PrivateDnsNameOptionsOnLaunch": {
          "EnableResourceNameDnsAAAARecord": true,
          "EnableResourceNameDnsARecord": true,
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test-dualstack-subnet",
          },
        ],
        "VpcId": {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "DualStackSubnetRouteTableAssociationD43A2316": {
      "Properties": {
        "RouteTableId": {
          "Ref": "testrtEA36A15F",
        },
        "SubnetId": {
          "Ref": "DualStackSubnetC42B1019",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "Ipv6OnlySubnet53DACA43": {
      "Properties": {
        "AvailabilityZoneId": "1",
        "EnableDns64": true,
        "Ipv6CidrBlock": "fd00::/58",
        "Ipv6Native": true,
        "PrivateDnsNameOptionsOnLaunch": {
          "EnableResourceNameDnsAAAARecord": true,
          "EnableResourceNameDnsARecord": false,
          "HostnameType": "resource-name",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test-ipv6-only-subnet",
          },
        ],
        "VpcId": {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "Ipv6OnlySubnetRouteTableAssociation88B099B9": {
      "Properties": {
        "RouteTableId": {
          "Ref": "testrtEA36A15F",
        },
        "SubnetId": {
          "Ref": "Ipv6OnlySubnet53DACA43",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "TestDeleteDefaultSgRules8A6777C7": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomDeleteDefaultSecurityGroupRulesCustomResourceProviderLogGroup36ABE46B",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomDeleteDefaultSecurityGroupRulesCustomResourceProviderHandler0579558F",
            "Arn",
          ],
        },
        "uuid": "REPLACED-UUID",
        "vpcId": "someVpcId",
      },
      "Type": "Custom::DeleteDefaultSecurityGroupRules",
      "UpdateReplacePolicy": "Delete",
    },
    "TestVpcCloudWatchFlowLogD5309822": {
      "Properties": {
        "DeliverLogsPermissionArn": {
          "Fn::GetAtt": [
            "TestVpcFlowLogsRole35E8FB64",
            "Arn",
          ],
        },
        "LogDestination": {
          "Fn::GetAtt": [
            "TestVpcFlowLogsGroup63B469E8",
            "Arn",
          ],
        },
        "LogDestinationType": "cloud-watch-logs",
        "MaxAggregationInterval": 60,
        "ResourceId": {
          "Ref": "TestVpcE77CE678",
        },
        "ResourceType": "VPC",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Main",
          },
        ],
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "TestVpcDhcpOptionsAssociationDB23B751": {
      "Properties": {
        "DhcpOptionsId": "Test-Options",
        "VpcId": {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
    },
    "TestVpcE77CE678": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": false,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Main",
          },
          {
            "Key": "Test-Key",
            "Value": "Test-Value",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "TestVpcExistingIamB9508C93": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": false,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Main",
          },
          {
            "Key": "Test-Key",
            "Value": "Test-Value",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "TestVpcExistingIamCloudWatchFlowLog976A715F": {
      "Properties": {
        "DeliverLogsPermissionArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              {
                "Ref": "AWS::AccountId",
              },
              ":role/AWSAcceleratorVpcFlowLogsRole",
            ],
          ],
        },
        "LogDestination": {
          "Fn::GetAtt": [
            "TestVpcExistingIamFlowLogsGroupD35F5586",
            "Arn",
          ],
        },
        "LogDestinationType": "cloud-watch-logs",
        "MaxAggregationInterval": 60,
        "ResourceId": {
          "Ref": "TestVpcExistingIamB9508C93",
        },
        "ResourceType": "VPC",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Main",
          },
        ],
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "TestVpcExistingIamDhcpOptionsAssociation92EB66FD": {
      "Properties": {
        "DhcpOptionsId": "Test-Options",
        "VpcId": {
          "Ref": "TestVpcExistingIamB9508C93",
        },
      },
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
    },
    "TestVpcExistingIamFlowLogsGroupD35F5586": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "testKey2ExistingIam0E728F30",
            "Arn",
          ],
        },
        "RetentionInDays": 10,
        "Tags": [
          {
            "Key": "Name",
            "Value": "Main",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "TestVpcExistingIamInternetGateway812AACEB": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Main",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "TestVpcExistingIamInternetGatewayAttachment2ABE52DD": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "TestVpcExistingIamInternetGateway812AACEB",
        },
        "VpcId": {
          "Ref": "TestVpcExistingIamB9508C93",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "TestVpcExistingIamS3FlowLog15E7512D": {
      "Properties": {
        "LogDestination": "arn:aws:s3:::aws-accelerator-test-111111111111-us-east-1/vpc-flow-logs/",
        "LogDestinationType": "s3",
        "MaxAggregationInterval": 60,
        "ResourceId": {
          "Ref": "TestVpcExistingIamB9508C93",
        },
        "ResourceType": "VPC",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Main",
          },
        ],
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "TestVpcExistingIamVirtualPrivateGateway4A00A9BC": {
      "Properties": {
        "AmazonSideAsn": 65000,
        "Tags": [
          {
            "Key": "Name",
            "Value": "Main",
          },
        ],
        "Type": "ipsec.1",
      },
      "Type": "AWS::EC2::VPNGateway",
    },
    "TestVpcExistingIamVirtualPrivateGatewayAttachmentE053A5C5": {
      "Properties": {
        "VpcId": {
          "Ref": "TestVpcExistingIamB9508C93",
        },
        "VpnGatewayId": {
          "Ref": "TestVpcExistingIamVirtualPrivateGateway4A00A9BC",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "TestVpcFlowLogsGroup63B469E8": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "testkey2C81DE6D4",
            "Arn",
          ],
        },
        "RetentionInDays": 10,
        "Tags": [
          {
            "Key": "Name",
            "Value": "Main",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "TestVpcFlowLogsRole35E8FB64": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "vpc-flow-logs.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Main",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestVpcFlowLogsRoleDefaultPolicyA03A358B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DeleteLogDelivery",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TestVpcFlowLogsGroup63B469E8",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestVpcFlowLogsRoleDefaultPolicyA03A358B",
        "Roles": [
          {
            "Ref": "TestVpcFlowLogsRole35E8FB64",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestVpcInternetGateway01360C82": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Main",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "TestVpcInternetGatewayAttachment60E451D5": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "TestVpcInternetGateway01360C82",
        },
        "VpcId": {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "TestVpcIpv6CidrBlock02C3E0D0B": {
      "Properties": {
        "AmazonProvidedIpv6CidrBlock": true,
        "VpcId": {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::EC2::VPCCidrBlock",
    },
    "TestVpcIpv6CidrBlock121C0BB97": {
      "Properties": {
        "Ipv6CidrBlock": "::1",
        "Ipv6Pool": "ipv6Pool-ec2-1234",
        "VpcId": {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::EC2::VPCCidrBlock",
    },
    "TestVpcS3FlowLog86FD93A4": {
      "Properties": {
        "LogDestination": "arn:aws:s3:::aws-accelerator-test-111111111111-us-east-1/vpc-flow-logs/",
        "LogDestinationType": "s3",
        "MaxAggregationInterval": 60,
        "ResourceId": {
          "Ref": "TestVpcE77CE678",
        },
        "ResourceType": "VPC",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Main",
          },
        ],
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "TestVpcVirtualPrivateGateway56B5C340": {
      "Properties": {
        "AmazonSideAsn": 65000,
        "Tags": [
          {
            "Key": "Name",
            "Value": "Main",
          },
        ],
        "Type": "ipsec.1",
      },
      "Type": "AWS::EC2::VPNGateway",
    },
    "TestVpcVirtualPrivateGatewayAttachment5D655F8D": {
      "Properties": {
        "VpcId": {
          "Ref": "TestVpcE77CE678",
        },
        "VpnGatewayId": {
          "Ref": "TestVpcVirtualPrivateGateway56B5C340",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "TestVpcVpcCidrBlock8C35CE6C": {
      "Properties": {
        "CidrBlock": "10.2.0.0/16",
        "VpcId": {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::EC2::VPCCidrBlock",
    },
    "naclTest75916313": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "naclTest",
          },
          {
            "Key": "test",
            "Value": "test2",
          },
        ],
        "VpcId": {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::EC2::NetworkAcl",
    },
    "naclTestnaclEntryF5491A57": {
      "Properties": {
        "CidrBlock": "10.0.0.14/32",
        "Egress": true,
        "NetworkAclId": {
          "Ref": "naclTest75916313",
        },
        "Protocol": 443,
        "RuleAction": "deny",
        "RuleNumber": 2,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "naclTestnaclSubnetAssociation5D7C6E54": {
      "Properties": {
        "NetworkAclId": {
          "Ref": "naclTest75916313",
        },
        "SubnetId": {
          "Ref": "testAF53AC38",
        },
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
    },
    "natGw090A9EE3": {
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "natGwEip8079CDCC",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "testAF53AC38",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ngw",
          },
          {
            "Key": "test",
            "Value": "test2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "natGwEip8079CDCC": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ngw",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "testAF53AC38": {
      "Properties": {
        "AvailabilityZone": "a",
        "CidrBlock": "10.0.1.0/24",
        "OutpostArn": "",
        "Tags": [
          {
            "Key": "Name",
            "Value": "testSubnetOutpost",
          },
        ],
        "VpcId": {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testKey2ExistingIam0E728F30": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "testKms1A8429BFF": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "testKms25B759B9A": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "testKms8D3EA89B": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "testKmsTestDeleteDefaultSgRules7B9FDE55": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "testRouteTableAssociation93A5191C": {
      "Properties": {
        "RouteTableId": {
          "Ref": "testrtEA36A15F",
        },
        "SubnetId": {
          "Ref": "testAF53AC38",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testSubnetIpamB3252329": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomIpamSubnetCustomResourceProviderLogGroup3BB67050",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomIpamSubnetCustomResourceProviderHandlerF7AF0D7A",
            "Arn",
          ],
        },
        "availabilityZone": "b",
        "basePool": [
          "myBasePool",
        ],
        "ipamAllocation": {
          "ipamPoolName": "test",
          "netmaskLength": 24,
        },
        "name": "testSubnet",
        "tags": [],
        "vpcId": {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "Custom::IpamSubnet",
      "UpdateReplacePolicy": "Delete",
    },
    "testSubnetIpamPhysicalAz1F5518C4E": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomIpamSubnetCustomResourceProviderLogGroup3BB67050",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomIpamSubnetCustomResourceProviderHandlerF7AF0D7A",
            "Arn",
          ],
        },
        "availabilityZoneId": "1",
        "basePool": [
          "myBasePool",
        ],
        "ipamAllocation": {
          "ipamPoolName": "test",
          "netmaskLength": 24,
        },
        "name": "testSubnetPhysicalAz1",
        "tags": [],
        "vpcId": {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "Custom::IpamSubnet",
      "UpdateReplacePolicy": "Delete",
    },
    "testSubnetIpamPhysicalAz1RouteTableAssociationFEC58856": {
      "Properties": {
        "RouteTableId": {
          "Ref": "testrtEA36A15F",
        },
        "SubnetId": {
          "Ref": "testSubnetIpamPhysicalAz1F5518C4E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testSubnetIpamRouteTableAssociation3C411F29": {
      "Properties": {
        "RouteTableId": {
          "Ref": "testrtEA36A15F",
        },
        "SubnetId": {
          "Ref": "testSubnetIpamB3252329",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testSubnetPhysicalAz2E088113B": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomIpamSubnetCustomResourceProviderLogGroup3BB67050",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomIpamSubnetCustomResourceProviderHandlerF7AF0D7A",
            "Arn",
          ],
        },
        "availabilityZoneId": "2",
        "basePool": [
          "myBasePool",
        ],
        "ipamAllocation": {
          "ipamPoolName": "test",
          "netmaskLength": 24,
        },
        "name": "testSubnetPhysicalAz2",
        "tags": [],
        "vpcId": {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "Custom::IpamSubnet",
      "UpdateReplacePolicy": "Delete",
    },
    "testSubnetPhysicalAz2RouteTableAssociation3FE5D9C7": {
      "Properties": {
        "RouteTableId": {
          "Ref": "testrtEA36A15F",
        },
        "SubnetId": {
          "Ref": "testSubnetPhysicalAz2E088113B",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testkey2C81DE6D4": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "testrtEA36A15F": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test-rt",
          },
        ],
        "VpcId": {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "tetSgC7E79636": {
      "Properties": {
        "GroupDescription": "test",
        "GroupName": "test",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test",
          },
          {
            "Key": "test",
            "Value": "test2",
          },
        ],
        "VpcId": {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "tetSgegressTest4FBFADC1": {
      "Properties": {
        "CidrIp": "10.0.0.7/32",
        "Description": "test description",
        "FromPort": 80,
        "GroupId": {
          "Ref": "tetSgC7E79636",
        },
        "IpProtocol": "ipv4",
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "tetSgingressTestFBF41BB4": {
      "Properties": {
        "CidrIp": "10.0.0.7/32",
        "Description": "test description",
        "FromPort": 80,
        "GroupId": {
          "Ref": "tetSgC7E79636",
        },
        "IpProtocol": "ipv4",
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
  },
}
`;
